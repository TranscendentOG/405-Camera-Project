import RPi.GPIO as GPIO
from RpiMotorLib import RpiMotorLib
import time
import math

# Setup
PitchDir_Pin = 0
PitchStep_Pin = 0
PitchEN_Pin = 0

PitchMotor = RpiMotorLib.A4988Nema(PitchDir_Pin, PitchStep_Pin, (21,21,21), "DRV8825")
GPIO.setup(PitchEN_Pin,GPIO.OUT) 

YawDir_Pin = 0
YawStep_Pin = 0
YawEN_Pin = 0

YawMotor = RpiMotorLib.A4988Nema(YawDir_Pin, YawStep_Pin,(21,21,21), "DRV8825")
GPIO.setup(YawEN_Pin,GPIO.OUT)

def RotateCameraPitch (deg): # Rotates the camera the designated number of degrees
    stepSize = 1.8 # Step size in degrees
    numSteps = math.floor(deg/stepSize)
    if deg > 0:
        isClockwise = True
    if deg < 0:
        isClockwise = False
    GPIO.output(PitchEN_Pin,GPIO.LOW)
    PitchMotor.motor_go(isClockwise, # True=Clockwise, False=Counter-Clockwise
                          "Full" , # Step type (Full,Half,1/4,1/8,1/16,1/32)
                          numSteps, # number of steps
                          .0005, # step delay [sec]
                          False, # True = print verbose output 
                          .0005) # initial delay [sec]
    
def RotateCameraYaw (deg): # Rotates the camera the designated number of degrees
    stepSize = 1.8 # Step size in degrees
    numSteps = math.floor(deg/stepSize)
    if deg > 0:
        isClockwise = True
    if deg < 0:
        isClockwise = False
    GPIO.output(YawEN_Pin,GPIO.LOW)
    YawMotor.motor_go(isClockwise, # True=Clockwise, False=Counter-Clockwise
                          "Full" , # Step type (Full,Half,1/4,1/8,1/16,1/32)
                          numSteps, # number of steps
                          .0005, # step delay [sec]
                          False, # True = print verbose output 
                          .0005) # initial delay [sec]      
